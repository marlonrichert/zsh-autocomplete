#!/bin/zsh
zmodload -Fa zsh/zutil b:zstyle

.autocomplete.config.precmd() {
  # Remove incompatible settings.
  zstyle -d ':completion:*:functions' ignored-patterns
  zstyle -d ':completion:*:*:*:*:*' menu
  zstyle -d '*' single-ignored
  zstyle -d ':completion:*' special-dirs
  zstyle -d ':completion:*:default' list-prompt
  unset LISTPROMPT
}

zstyle ':completion:*' use-cache yes
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/compcache"

zstyle -e ':completion:*' completer _autocomplete.config.completer
_autocomplete.config.completer() {
  reply=( _expand _complete _correct _complete:-fuzzy _history _history:-fuzzy _ignored )
  [[ CURRENT -eq 1 && -z $PREFIX$SUFFIX && $compstate[context] == command ]] &&
    reply=( _complete )
}
zstyle ':completion:*' remove-all-dups yes

zstyle ':completion:history-incremental-*search-*:*' completer _autocomplete.history_lines

zstyle -e ':completion:*:-command-:*' tag-order _autocomplete.config.tag-order
_autocomplete.config.tag-order() {
    local -aU tags=()
    [[ -n "$path[(r).]" ]] &&
      tags+=( 'globbed-files' 'executables' 'directories' )
    [[ -o autocd ]] &&
      tags+=( '(|local-)directories' )
    [[ -n $tags ]] &&
      tags+=( 'suffix-aliases' )
    reply=( "$tags" ${${:-$PREFIX$SUFFIX}:--} )
}
zstyle ':completion:list-expand:*:-command-:*' tag-order '*'

zstyle ':completion:*:git-*:(|*-)argument-*:*' tag-order \
  'commit(|-^(tag))s tree(|-ish)s (|*-)files (|recent-)branch(|-nam)es'
zstyle ':completion:list-expand:*:git-*:(|*-)argument-*:*' tag-order '*'

zstyle ':completion:*:expand:*' tag-order '! all-expansions original' -
zstyle ':completion:*:(approximate|correct):*' tag-order '! original' -

# If we put l:?|=[[:punct:]] before r:|[[:punct:]]=**, the matching does not work as expected.
zstyle ':completion:*' matcher-list \
  'r:|[.]=** r:?|[-_]=** l:?|=[-_\\ ] m:{[:lower:]-}={[:upper:]_}'
zstyle ':completion:*-fuzzy:*' matcher-list \
  'r:|?=** m:{[:lower:]}={[:upper:]}'
zstyle ':completion:list-expand:*' matcher 'l:|=**'
zstyle ':completion:*:options' matcher 'b:-=+'

zstyle ':completion:*' prefix-needed yes
zstyle ':completion:*:expand:*' accept-exact continue
zstyle ':completion:*' ignore-parents 'parent pwd directory'
zstyle ':completion:*:users' ignored-patterns '_*'

zstyle -e ':completion:*:expand:*' glob '
  reply=( "yes" ); _autocomplete.is_glob ||
    reply=( "no" )'
zstyle ':completion:*:expand:*' keep-prefix no # Needed for file type highlighting
zstyle ':completion:*:expand:*' add-space subst

# Complete only the tail of a path.
zstyle ':completion:*:paths' expand suffix
zstyle ':completion:*:paths' list-suffixes yes
zstyle ':completion:*:paths' path-completion no

zstyle ':completion:*' group-name ''
zstyle ':completion:*' group-order \
  expansions history-words options \
  aliases functions builtins reserved-words \
  executables local-directories directories suffix-aliases
zstyle ':completion:*' complete-options yes
zstyle ':completion:*' list-dirs-first yes

local h1=$'%{\e[01;02;39m%}' end=$'%{\e[0m%}' hint=$'%{\e[22;02;39m%}'
zstyle ':completion:*:descriptions' format "$h1%d$end"
zstyle ':completion:*:messages' format "$h1%d$end"
zstyle -e ':completion:*:warnings' format _autocomplete.config.warnings-format
_autocomplete.config.warnings-format() {
  local d=${${(j:, :)_lastdescr[@]:#}/(#m)*, /$MATCH[1,-3] or }
  reply=( $'%{\e[01;02;39m%}'"No ${${:-$PREFIX$SUFFIX}:+matching }$d found."$'%{\e[0m%}' )
}

local kbd=$'%{\e[22;39m%}'
zstyle ':completion:*:unambiguous' format \
  "$h1%d$hint  (press ${kbd}Shift${hint}-${kbd}Tab$hint to insert)$end"
zstyle -e ':completion:*:all-matches' format _autocomplete.config.all-matches-format
_autocomplete.config.all-matches-format() {
  local end=$'%{\e[0m%}' hint=$'%{\e[22;02;39m%}' kbd=$'%{\e[22;39m%}'
  reply=( $'%{\e[01;02;39m%}'"%d$end" )
  [[ $IPREFIX$PREFIX$SUFFIX$ISUFFIX == *${compstate[unambiguous]:#?}* ]] &&
    reply[1]+="  ${hint}(press ${kbd}Shift${hint}-${kbd}Tab$hint to insert)$end"
}

zstyle ':completion:*:history-lines' format ''

zstyle ':completion:*' auto-description '%d'

zstyle ':completion:*' insert-sections yes
zstyle ':completion:*' separate-sections yes
